# TikTok Bot – Launch & Usage Notes

## 🔹 Development Commands

### Start the full app (recommended)
Runs **Vite (frontend)** + **Electron (backend)** together.  
This is the command you’ll use most of the time.  
```bash
npm start
```
- Opens the Electron window with your React UI.  
- Connects to TikTok (`main.js` runs).  
- Plays sounds & TTS when events happen.  

---

### Run only the frontend (UI only, no TikTok)
Useful if you just want to test the **React interface**.  
```bash
npm run dev
```
- Starts Vite dev server at [http://localhost:5173](http://localhost:5173).  
- Opens in your browser.  
- **Does not** connect to TikTok or play sounds (Electron isn’t running).  

---

### Run only Electron
Launches the Electron shell without waiting for Vite.  
```bash
npm run electron
```
- If Vite isn’t already running → you’ll see a blank Electron screen.  
- If Vite is running at `localhost:5173` → it will load your app UI.  
- Mainly used for debugging.  

---

## 🔹 Typical Workflow
1. **Edit code** in React (`App.jsx`) or backend (`main.js`).  
2. Run:  
   ```bash
   npm start
   ```  
3. Wait until the Electron window shows.  
4. Start a **TikTok livestream** from the account set in `main.js`.  
   ```js
   const tiktok = new TikTokLiveConnection("your-username");
   ```  
5. Confirm app status:  
   - 🟢 Connected → bot is live.  
   - 🔴 Disconnected → not live / username wrong.  
6. Test buttons in the UI to confirm sound & TTS.  

---

## 🔹 Where things run
- **Electron / main.js** → Connects to TikTok, plays sounds, runs TTS.  
- **Vite / React frontend** → Displays UI (status bar, logs, test buttons).  
- **Sounds** → Must be in `sounds/` folder at project root, e.g.:  
  ```
  project-root/
    main.js
    preload.js
    sounds/
      like.mp3
      follow.mp3
      small-gift.mp3
      big-gift.mp3
      multi-gift.mp3
  ```

---

## 🔹 Quick Debug Checklist
- If UI loads but **no TikTok events** → check username in `main.js`.  
- If **no sounds** play → confirm `sounds/` folder exists at root.  
- If **no speech** → check Windows PowerShell TTS is available.  
- If Electron shows blank → make sure you started with `npm start` (not just `npm run electron`).  

---

## 🔹 Packaging into a Windows .exe

When you’re ready to share your bot as a standalone app:

1. Install **electron-builder**:  
   ```bash
   npm install --save-dev electron-builder
   ```

2. Add a build script to `package.json`:  
   ```json
   "scripts": {
     "build": "vite build",
     "dist": "electron-builder"
   }
   ```

3. Add basic build config to `package.json`:  
   ```json
   "build": {
     "appId": "com.tiktok.bot",
     "productName": "TikTok Bot",
     "directories": {
       "output": "release"
     },
     "files": [
       "dist/**/*",
       "main.js",
       "preload.js",
       "sounds/**/*",
       "package.json"
     ],
     "win": {
       "target": "nsis",
       "icon": "icon.ico"
     }
   }
   ```

4. Run:  
   ```bash
   npm run dist
   ```

5. Your `.exe` installer will appear in the `release/` folder. ✅  

---

## 🔹 Packaging into a Mac .app (DMG)

If you want to build for **macOS**:

1. Install **electron-builder** (already in devDependencies if you followed Windows setup).  

2. Update `package.json` build config to add mac target:  
   ```json
   "build": {
     "appId": "com.tiktok.bot",
     "productName": "TikTok Bot",
     "directories": {
       "output": "release"
     },
     "files": [
       "dist/**/*",
       "main.js",
       "preload.js",
       "sounds/**/*",
       "package.json"
     ],
     "mac": {
       "target": "dmg",
       "icon": "icon.icns"
     }
   }
   ```

3. Run:  
   ```bash
   npm run dist
   ```

4. Your `.dmg` installer will appear in the `release/` folder. ✅  

⚠️ Note: You must run this build **on a Mac** to produce Mac binaries. Cross-compiling from Windows → Mac is not supported by electron-builder.  

---

⚡ Pro tip: During dev, always use `npm start`. Use `npm run dist` only when you want to create a distributable installer (`.exe` on Windows or `.dmg` on Mac).


# TikTok Bot Notes


## Future Improvements
- Prevent overlapping sounds (queue sounds so they play one after another)
- Toggle between male and female TTS voice
